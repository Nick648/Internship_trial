from random import uniform
from cmath import cos, pi, sin


def generate1():
    a = uniform(0, 1)
    b = uniform(0, 1)
    return a * cos(2 * pi * b), a * sin(2 * pi * b)


def generate2():
    while True:
        x = uniform(-1, 1)
        y = uniform(-1, 1)
        if x ** 2 + y ** 2 > 1:
            continue
        return x, y


def check_output():
    print('x1, y1 | x2, y2')
    for _ in range(100):
        a = generate1()
        b = generate2()
        print(a, '|', b, type(a[0]), type(b[0]), isinstance(a[0], complex), isinstance(b[0], complex))


def check_input():
    # print(s1)
    # print(s2)

    a = s1.split(' ')
    b = s2.split(' ')
    for item in a:
        r = float(item)
        print(r, type(r))

    print('*' * 80)
    for item in b:
        try:
            r = complex(item)
            print(r, type(r))
        except ValueError:
            print(0)


def main():
    for _ in range(100):
        str_in = input().split(' ')
        # for item in str_in:
        # if isinstance(item, complex):
        try:
            r = float(str_in[0])
            print(2)
        except ValueError:
            print(1)


s = '''
0.39846865224616856+0j), (-0.6286615403242306+0j)) | (-0.3538555173575253, 0.822924938476701
0.10963350146666563+0j), (0.8436874621027739+0j)) | (-0.24399597807290818, -0.7015932027914253
0.7616651227035378+0j), (0.3508449680290389+0j)) | (0.3836271752881586, 0.844928621083342
-0.5994467509019177-0j), (0.7331307132247397+0j)) | (0.3107780345337974, -0.15482382541016282
-0.3627936361323967+0j), (-0.0024255148967611026-0j)) | (0.4603814569908542, 0.42871193295114307
-0.11268552015659519+0j), (-0.030391527748284814-0j)) | (-0.6861343004300842, -0.7104776368472188
0.21065494181874006+0j), (0.9605643291576631+0j)) | (-0.28756918909282825, 0.9363223202731648
0.10639805615164202+0j), (-0.6632567702450586+0j)) | (-0.3875428714290994, -0.3772869121288247
-0.2742916328018432-0j), (0.6761052506351094+0j)) | (0.9253872466813964, 0.01177614198187893
0.3064837050952101+0j), (0.8045209775495581+0j)) | (-0.05882760912523932, 0.8368546296332058
-0.24542206745261722-0j), (0.6438865930279825+0j)) | (0.4339802347464614, 0.16354413484895503
0.06871388421286645+0j), (0.452244631338666+0j)) | (0.4265363972550109, -0.82544074818401
-0.1188085241276048-0j), (0.14193800416499538+0j)) | (-0.8944424478723985, -0.20462456383477412
0.16620104697653507+0j), (0.5800433847113883+0j)) | (-0.012567147540870849, -0.9217795916265705
-0.0464394225835205+0j), (-0.03347726197703407-0j)) | (0.44133847125195635, -0.6348268880532828
0.3732867663637772+0j), (-0.07329993606169852+0j)) | (0.2982314087666045, -0.5867007473276755
0.24378033891510223+0j), (-0.24496203495301738+0j)) | (-0.3722033544767145, 0.7280178588416331
-0.18711454856261409-0j), (0.1487298692774114+0j)) | (-0.40473382629420107, -0.16658592106437986
0.9885853034657619+0j), (0.1284535834511391+0j)) | (-0.773197995594771, 0.33688351387152804
-0.8229662075111104-0j), (0.46439565055213716+0j)) | (0.10434847402177794, -0.7137528366007762
0.19182759809375843+0j), (0.4599151164357728+0j)) | (0.2730001053701947, -0.7283495713844446
0.27572485974702005+0j), (0.7177117300886567+0j)) | (0.6359378930777353, 0.24752556583941598
0.2720296125518445+0j), (-0.44396484706572403+0j)) | (0.27770027520686424, 0.9028301173060196
0.945307921182598+0j), (-0.04749636343758583+0j)) | (0.19447387562908447, 0.17646339528497257
-0.34057892566098275-0j), (0.43589463971043+0j)) | (-0.4125510710663909, 0.06288445383563279
0.38962551396962974+0j), (-0.16788949620858973+0j)) | (0.21801399713123204, -0.935521820933555
-0.2047836744464997-0j), (0.3948771893968756+0j)) | (0.019476883321014382, 0.8933052831613069
0.6528838582899316+0j), (0.5746321726413995+0j)) | (-0.4148425634740307, -0.36521330518368167
0.09216656233439624+0j), (0.23642251302053766+0j)) | (-0.7569390188765495, -0.5326074485188794
0.5130842714586191+0j), (-0.3424484036797153+0j)) | (0.7148422151901352, -0.4398257533658907
-0.9014082586738806-0j), (0.21872564724542198+0j)) | (-0.4351715777146026, -0.8198018882785827
-0.004957819345101946-0j), (0.04928431050137469+0j)) | (-0.5838074633355144, 0.09085142872430318
0.10217908586847252+0j), (0.08523671995626347+0j)) | (-0.377931954889561, -0.9238365662707471
0.34935607230669324+0j), (0.355117076424863+0j)) | (-0.045566356139875364, 0.7604703692931802
0.8722755701765145+0j), (-0.19217964894337508+0j)) | (0.24277151904022598, 0.35499900369200943
-0.2546613442741047-0j), (0.31242075724566976+0j)) | (0.31640399510046313, 0.1638976586643459
0.2275851637725067+0j), (-0.7315577660586207+0j)) | (-0.5613076094284486, 0.532495207567788
-0.09893713875369073-0j), (0.10631645414320984+0j)) | (-0.17023928698859203, 0.4985672961433283
'''.strip().split('\n')
s1 = ''
s2 = ''
for i in s:
    a = i.split('|')

    a[0].strip()
    a1 = a[0][0: a[0].find(')')]
    a2 = a[0][a[0].find('(') + 1: a[0].rfind(')') - 1]
    s1 += a1 + ' ' + a2 + ' '

    b1 = a[1][2: a[1].find(',')]
    b2 = a[1][a[1].find(',') + 2::]
    s2 += b1 + ' ' + b2 + ' '

if __name__ == '__main__':
    # check_input()
    # check_output()
    main()
